// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamingRecommenderAPI.Data;

#nullable disable

namespace StreamingRecommenderAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StreamingRecommenderAPI.Models.Midia.OmdbMovie", b =>
                {
                    b.Property<string>("ImdbID")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "imdbID");

                    b.Property<string>("Actors")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Actors");

                    b.Property<string>("Awards")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Awards");

                    b.Property<string>("Country")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Country");

                    b.Property<string>("Director")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Director");

                    b.Property<string>("Error")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Error");

                    b.Property<string>("Genre")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Genre");

                    b.Property<string>("ImdbRating")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "imdbRating");

                    b.Property<string>("Language")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Language");

                    b.Property<string>("Plot")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Plot");

                    b.Property<string>("Poster")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Poster");

                    b.Property<string>("Rated")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Rated");

                    b.Property<string>("Released")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Released");

                    b.Property<string>("Response")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Response");

                    b.Property<string>("Runtime")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Runtime");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Title");

                    b.Property<string>("Type")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Type");

                    b.Property<string>("Writer")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Writer");

                    b.Property<string>("Year")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Year");

                    b.HasKey("ImdbID");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("StreamingRecommenderAPI.Models.User.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Foto_Perfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TokenExpiraEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenRecuperacao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
